<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bored Now</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="borednow.me/"/>
  <updated>2020-11-07T19:57:07.472Z</updated>
  <id>borednow.me/</id>
  
  <author>
    <name>Ron A</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Building a mechanical keyboard</title>
    <link href="borednow.me/2020/11/07/Building-a-mechanical-keyboard/"/>
    <id>borednow.me/2020/11/07/Building-a-mechanical-keyboard/</id>
    <published>2020-11-07T18:52:43.000Z</published>
    <updated>2020-11-07T19:57:07.472Z</updated>
    
    <content type="html"><![CDATA[<p>A friend recently told me he ordered parts for a split mechanical keyboard.<br>I have been using a split keyboard for several years (the <a href="https://kinesis-ergo.com/shop/freestyle2-for-pc-us/" target="_blank" rel="noopener">Kinesis Freestyle 2</a>) and like the experience. I was looking for a new split, this time a mechanical keyboard, but it seemed all good options (that is, without awkward <a href="https://ergodox-ez.com/" target="_blank" rel="noopener">thumb keys</a>) are custom builds. So I jumped on the opportunity to build one with him.</p><h3 id="Parts"><a href="#Parts" class="headerlink" title="Parts"></a>Parts</h3><p>I ordererd the following:</p><ul><li>Nyquist 60% ortholinear PCB and plates from <a href="keeb.io">keeb.io</a></li><li>Cherry Brown switches</li><li>DSA keycaps from <a href="https://pimpmykeyboard.com/dsa-standard-sublimated-keysets/" target="_blank" rel="noopener">pimpmykeyboard.com</a></li><li>Fancy TRRS and <a href="https://kprepublic.com/products/textile-jean-cloth-usb-c-micro-cable-type-c-usb-1-6m-stright-length-blue-colorway?_pos=9&_sid=f199e67bf&_ss=r" target="_blank" rel="noopener">USB-C</a> cables</li></ul><p>The assembly process, with the help of my friend, was pretty simple. We installed the space bar stabilizers, soldered the switches and assembled the top and bottom plates.</p><h3 id="Designing-a-layout"><a href="#Designing-a-layout" class="headerlink" title="Designing a layout"></a>Designing a layout</h3><p>Due to the keyboard being a 60% keyboard, and missing some keys, several layers are needed. Here are my layers for the Nyquist:<br></br><br><img style="display: inline;" src="/images/layout.png"></p><h3 id="Flashing-the-firmware"><a href="#Flashing-the-firmware" class="headerlink" title="Flashing the firmware"></a>Flashing the firmware</h3><p>The hardest part was surprisingly flashing the firmware, which is why I decided to document it here.</p><ol><li><a href="https://beta.docs.qmk.fm/tutorial/newbs_getting_started" target="_blank" rel="noopener">Install</a> qmk</li><li>Build your keymap on <a href="https://config.qmk.fm/" target="_blank" rel="noopener">https://config.qmk.fm/</a></li><li>Download the keymap json and save it in the qmk_firmware folder (the qmk installation location).</li><li>Generate the firmware by running the following command:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ qmk compile mylayout.json</span><br></pre></td></tr></table></figure>This copies the firmware into qmk’s firmware folder.</li><li>Reset your keyboard.</li><li>Flash the firmware:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo make keebio/nyquist/rev3:mylayout:flash</span><br></pre></td></tr></table></figure></li></ol><h3 id="The-end-result"><a href="#The-end-result" class="headerlink" title="The end result"></a>The end result</h3><p>As you can see I had to be creative with some keycap labels, but more are on the way :)</p></br><img style="display: inline;" src="/images/IMG_20201024_195103.jpg"></br><img style="display: inline;" src="/images/IMG_20201025_104204.jpg"></br><img style="display: inline;" src="/images/IMG_20201025_104208.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A friend recently told me he ordered parts for a split mechanical keyboard.&lt;br&gt;I have been using a split keyboard for several years (the 
      
    
    </summary>
    
    
    
      <category term="split" scheme="borednow.me/tags/split/"/>
    
      <category term="mechanical keyboard" scheme="borednow.me/tags/mechanical-keyboard/"/>
    
  </entry>
  
  <entry>
    <title>Linux laptop</title>
    <link href="borednow.me/2020/07/10/Linux-laptop/"/>
    <id>borednow.me/2020/07/10/Linux-laptop/</id>
    <published>2020-07-10T19:16:30.000Z</published>
    <updated>2020-07-11T09:25:43.706Z</updated>
    
    <content type="html"><![CDATA[<p>I recently purchased a laptop. My requirements were a HiDPI screen for photo editing, 16GB of RAM and a CPU that is suitable for development (not only of the Node.js full stack variety).</p><p>I considered an MBP, but used MacBook’s have horrible keyboard or are too old, and newer ones cost alot. With macs out of the picture, I considered Lenovo, Dell, and Asus, and my budget was up to 1300USD. A refurbished or used thinkpad would have answered all the requirements, except for the screen, and they also have old propietary charging connectors which are annoying if you’re used to USB C.</p><p>After much consideration I settled on a <a href="https://www.lenovo.com/il/en/laptops/ideapad/s-series/Lenovo-IdeaPad-S540-13IML/p/88IPS501379" target="_blank" rel="noopener">Lenovo IdeaPad S540-IML</a>.<br>Being a consumer Laptop, I was worried about Linux compatibility, but the specs and price were too good to pass up:</p><ul><li>10th Gen Intel Quad Core i5-10210U CPU @ 1.60GHz, up to 4.2 GHz</li><li>16GB DDR4 2666MHz (soldered, non upgradable)</li><li>1TB M.2 2280 SSD PCIe NVMe</li><li>13.3 Inch QHD (2560 x 1600)</li><li>NVIDIA GeForce MX250, with 2GB GDDR5 VRAM (optional, but doesn’t add much to the price)</li><li>2 x USB 3.1 Type-C</li><li>1 x USB 3.1 Type-A (Gen 1)</li><li>~1.4 KG</li></ul><p>The plan was to dual boot Windows 10, which will be used for casual gaming and photo editing, and linux for development.</p><h2 id="Choosing-a-distro"><a href="#Choosing-a-distro" class="headerlink" title="Choosing a distro"></a>Choosing a distro</h2><p>In the past I used Ubuntu, Debian, Mint (both the Ubuntu and Debian based editions), Fedora and most recently Arch linux. I also heard about PopOS so I thought to give it a try as well.</p><p>I created a PopOS live USB, and the system looked good, but had a freezing issue. Perhaps it would have been solved by installing updates, but I didn’t check. Other than that everything worked which encouraged me.</p><p>I later tried linux mint, which failed to detect the Wi-Fi card. It was also slow compared to PopOS, which I think was down the the desktop environment (Cinnamon vs Gnome for PopOS).</p><p>The third system I tried, and the one I stuck to was Manjaro gnome edition. I like arch, but wanted something easier as this will be my main system.</p><h2 id="Installation-steps"><a href="#Installation-steps" class="headerlink" title="Installation steps"></a>Installation steps</h2><p>The main deliberation here was partitioning. Since I want to dual boot with Windows 10. Most reccommend disabling Secure Boot and fast boot. Before disabling them my system didn’t boot from the live USB.<br>After disabling them, I shrank the Windows partition to half its size.<br>I booted into the Manjaro live USB, and started the graphical installer.<br>There are conflicting articles about whether to use one or two UEFI boot partitions. I opted to leave the Windows boot partition as is and create a different one for Manjaro as it seems that this has less change of conflicts if Windows decides to change something in the boot partition.<br>This is the final partition layout:<br>  |             Type                 |   Size       |       Role           |   Mount       |<br>  |:—————————-:    |:——–:    |:—————-:    |:———:    |<br>  |          EFI system              |  260 MiB     |   Windows boot       |               |<br>  | Microsoft reserved partition     |  16 MiB      |     god knows        |               |<br>  |  Basic Data Partition (NTFS)     |  451 GiB     |   Windows data       |               |<br>  |          EFI System              |  512 MiB     |    Linux boot        | /boot/efi     |<br>  |           linuxswap              | 7.91 GiB     |       Swap           |               |<br>  |             ext4                 |   27.94      |    Manjaro OS        |     /         |<br>  |             ext4                 |   27.94      |  Alternative OS      |               |<br>  |             ext4                 |  436 GiB     |       home           |   /home       |<br>  |             ntfs                 | 1000 MiB     | Windows recovery     |               |</p><h2 id="Post-install"><a href="#Post-install" class="headerlink" title="Post install"></a>Post install</h2><p>Run updates, install chromium, Code OSS (VS Code),<br>I like a drop down terminal, and <a href="https://extensions.gnome.org/extension/1509/drop-down-terminal-x/" target="_blank" rel="noopener">this</a> one works well.</p><h2 id="Fixing-issues"><a href="#Fixing-issues" class="headerlink" title="Fixing issues"></a>Fixing issues</h2><p>I encountered two issues, random freezing, which was solved by upgrading the system, and no sound, which was solved as described in the <a href="https://wiki.archlinux.org/index.php/Lenovo_IdeaPad_S540_13IML" target="_blank" rel="noopener">Arch Wiki page</a> I opened for the laptop.</p><h2 id="Installing-Scala"><a href="#Installing-Scala" class="headerlink" title="Installing Scala"></a>Installing Scala</h2><p>Install a JDK (Arch only has OpenJDK) and the sbt package.<br>I use Visual Studio Code, and the version in the repostiries is the open source one Code OSS.<br>Install the Metals extension for Code OSS.<br>Then I had a really weird error when downloading dependencies from sbt. This <a href="https://classicforum.manjaro.org/index.php?topic=236.0" target="_blank" rel="noopener">solution</a> worked.</p><h2 id="Installing-Node-js"><a href="#Installing-Node-js" class="headerlink" title="Installing Node.js"></a>Installing Node.js</h2><p>Install nvm from AUR, then install the latest node version.</p><p>It took a day, but in the end I’m really happy with the system.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I recently purchased a laptop. My requirements were a HiDPI screen for photo editing, 16GB of RAM and a CPU that is suitable for developm
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="borednow.me/tags/Linux/"/>
    
      <category term="Development" scheme="borednow.me/tags/Development/"/>
    
      <category term="Manjaro" scheme="borednow.me/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>Life Philosophy</title>
    <link href="borednow.me/2020/07/08/Life-Philosophy/"/>
    <id>borednow.me/2020/07/08/Life-Philosophy/</id>
    <published>2020-07-08T17:19:00.000Z</published>
    <updated>2020-07-11T11:48:34.887Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Talk about your feelings.</li><li>Do something you are good at.</li><li>Keep yourself hydrated.</li><li>Eat well.</li><li>Keep active in mind and body.</li><li>Take a break.</li><li>Stay connected to those you care about.</li><li>Ask for help.</li><li>Be proud of your very being.</li><li>Actively care for others.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;Talk about your feelings.&lt;/li&gt;
&lt;li&gt;Do something you are good at.&lt;/li&gt;
&lt;li&gt;Keep yourself hydrated.&lt;/li&gt;
&lt;li&gt;Eat well.&lt;/li&gt;
&lt;li&gt;Keep 
      
    
    </summary>
    
    
    
      <category term="philosophy" scheme="borednow.me/tags/philosophy/"/>
    
  </entry>
  
  <entry>
    <title>This blog</title>
    <link href="borednow.me/2020/06/08/this-blog/"/>
    <id>borednow.me/2020/06/08/this-blog/</id>
    <published>2020-06-08T09:19:00.000Z</published>
    <updated>2020-07-11T11:48:23.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>This blog was created using <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> and is hosted on GitHub pages.<br>I used this <a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39" target="_blank" rel="noopener">tutorial</a> and the <a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">Cactus</a> theme.</p><h3 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h3><p>Instead of using hexo-deployer-git for deploying to GitHub Pages, I defined /docs to be the public folder for the site. This enables the source and the generate site to be in the same repository. A tutorial can be found <a href="https://www.poweredbyjeff.com/2018/05/14/Deploying-Hexo-website-to-Github-Pages/" target="_blank" rel="noopener">here</a>.</p><h3 id="Domain"><a href="#Domain" class="headerlink" title="Domain"></a>Domain</h3><p>Bought from <a href="https://www.namecheap.com/" target="_blank" rel="noopener">namecheap</a>. Setup described <a href="https://richpauloo.github.io/2019-11-17-Linking-a-Custom-Domain-to-Github-Pages/" target="_blank" rel="noopener">here</a>.</p><h3 id="Icons"><a href="#Icons" class="headerlink" title="Icons"></a>Icons</h3><p>Icons made by <a href="https://www.flaticon.com/authors/freepik" target="_blank" rel="noopener">Freepik</a> from <a href="https://www.flaticon.com/" target="_blank" rel="noopener"">flaticon.com</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h3><p>Create a draft</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft <span class="string">"My Draft"</span></span><br></pre></td></tr></table></figure><p>Publish a draft</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish <span class="string">"My Draft"</span></span><br></pre></td></tr></table></figure><p>Create a new post</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server --draft</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>Generate static files</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><p>Generate and deploy site</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Setup&quot;&gt;&lt;a href=&quot;#Setup&quot; class=&quot;headerlink&quot; title=&quot;Setup&quot;&gt;&lt;/a&gt;Setup&lt;/h2&gt;&lt;p&gt;This blog was created using &lt;a href=&quot;https://hexo.io&quot; targ
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="borednow.me/tags/hexo/"/>
    
      <category term="blog" scheme="borednow.me/tags/blog/"/>
    
  </entry>
  
</feed>
